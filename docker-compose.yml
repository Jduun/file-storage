version: '3.8'

services:
  web:
    build: .
    container_name: flask-app
    restart: unless-stopped
    volumes:
      - ./app:/app
      - ${ROOT_FOLDER}:${ROOT_FOLDER}
    ports:
      - "${APP_PORT}:5000"
    env_file:
      - .env
    depends_on:
      - db
    environment:
      - DATABASE_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
      - ROOT_FOLDER=${ROOT_FOLDER}
  db:
    image: postgres:13
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_DATA_PATH}:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
  worker:
    build: .
    restart: unless-stopped
    volumes:
      - ${ROOT_FOLDER}:${ROOT_FOLDER}
    command: python /app/rabbitmq/worker.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    deploy:
      replicas: 3
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
